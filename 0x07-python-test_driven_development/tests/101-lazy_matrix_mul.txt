The 101-lazy_matrix_mul Module
========================

Using "lazy_matrix_mul" function
-------------------------------

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> __import__('101-lazy_matrix_mul').__doc__ is not None
True

>>> lazy_matrix_mul.__doc__ is not None
True

Usage: matrix_mul(m_a, m_b)
----------------------------
>>> lazy_matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]])
array([[19, 22,  5],
       [43, 50, 11],
       [43, 50, 11]])

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])

>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
array([[13, 16]])

>>> lazy_matrix_mul([[1, 2], 2], [[3, 4], [5, 6]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> lazy_matrix_mul([[1, 2], [2, 3]], [3, [5, 6]])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> lazy_matrix_mul([[1, 2], [2, 3]], "Holberton")
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> lazy_matrix_mul("Holberton", [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> lazy_matrix_mul([[None]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1, 2], [2, 3]], [])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> lazy_matrix_mul([[1, 2], [2, 3]], [1, 2, 3, 4])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> lazy_matrix_mul([1, 2, 3, 4], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> lazy_matrix_mul([[1, 3], ["5", 6]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([[1, 3], [5, 6]], [[1, "2"], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

>>> lazy_matrix_mul([[1, 3, 2], [1, 3, 2]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> lazy_matrix_mul([[3, 2, 5], [1, 3]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: each row of m_a must should be of the same size

>>> lazy_matrix_mul([[1, 2], [2, 3]], [[3, 2, 5], [1, 3]])
Traceback (most recent call last):
...
TypeError: each row of m_b must should be of the same size

>>> lazy_matrix_mul([[]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> lazy_matrix_mul([[1, 2], [2, 3]], [[]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> lazy_matrix_mul()
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> lazy_matrix_mul([[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
