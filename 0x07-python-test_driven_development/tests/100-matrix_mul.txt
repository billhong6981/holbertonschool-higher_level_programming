The 100-matrix_mul Module
========================

Using "matrix_mul" function
-------------------------------

	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Usage: matrix_mul(m_a, m_b)
----------------------------

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2], 2], [[3, 4], [5, 6]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [2, 3]], [3, [5, 6]])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> matrix_mul([[1, 2], [2, 3]], 3)
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> matrix_mul(2, [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> matrix_mul([[None]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([None], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 3], ["a", "b"]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 3, 2], [1, 3, 2]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[3, 2, 5], [1, 3]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
TypeError: each row of m_a must should be of the same size

>>> matrix_mul([[]], [[1, 2], [2, 3]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
